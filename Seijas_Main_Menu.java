/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
*/

package seijas_spell_project;
import java.awt.Color;
import java.io.*;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.*; 
import java.io.FileNotFoundException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTextField;




/**
 *
 * @author Master1
 */
public class Seijas_Main_Menu extends javax.swing.JFrame {

    /**
     * Creates new form Seijas_Main_Menu
     */
    public Seijas_Main_Menu() {
        initComponents();
    }

    
    // Reading all data from text file

    /**
     *
     * @param cPath c:\week3\
     * @param aArrayName // Dictionary or Test
     * @return  true 
     * If file exist true, if it does not exist false
     * @throws FileNotFoundException
     */
    public boolean ReadingFile(String cPath, ArrayList aArrayName) throws FileNotFoundException {       
        
        File f =new File(cPath);
        String cRecord;
        int nRecord = 0;
        boolean lLoaded = false;
        if (f.exists()){

            try {
                Scanner scF=new Scanner(f);

                while (scF.hasNext()){
                    
                   String record=scF.nextLine();
                   Scanner scRec=new Scanner(record);

                   cRecord = scRec.next();
                   cRecord = cRecord.toUpperCase();
                   System.out.print(" "+ nRecord);         
                   System.out.println(cRecord);        

                   // Assign the record to rthe Array record
                   aArrayName.add(cRecord);
                   nRecord = nRecord + 1;
                }
                if (nRecord > 1) lLoaded = true; // if records have been loaded RETURN true
                
            } catch (IOException ex) {
                Logger.getLogger(Seijas_Main_Menu.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            // if the files does not exist, it will pop up a windows messa
            JOptionPane.showMessageDialog(this, "This File does not exist, please try again"
,"Error loading file", JOptionPane.PLAIN_MESSAGE);
            lLoaded = false; // if not records have been loaded RETURN false
        }
        return lLoaded;
     
    }
/** Search for values into Dictionary        
 i integer has 2 values :
 i = 1: the word was typed, only one ward to be searched
*i = 0: The 2 Files will be compared Dictionary vs Test 
**/

private void Compare_Files(int i) {
        
        int nrecord = 0; 
        boolean lfound = false;
        String cUnknowWords = "";
        String cSearch= "";
        jTextAreaCompared.setText("");
        if (i == 1) { // if the search comes with a single word typed

            cSearch= jTextFieldTypeW.getText();
            cSearch = cSearch.toUpperCase();
            lfound= aDictionary.contains(cSearch);
                 // Search the work typed
                 if(lfound == false){
                     cUnknowWords = cUnknowWords + "It is an unknown word << "+ cSearch +" >>\n";
                 }else    {
                     cUnknowWords = cUnknowWords + "It is a known word << "+ cSearch +" >>\n";
                 }
        }else{
                // Search the array Test
                while (aTest.size() > nrecord) {
                   System.out.println(aTest.get(nrecord));
                   cSearch = aTest.get(nrecord);
                   System.out.println("The recod : " + nrecord + "it is a known word"+ cSearch );


                 lfound= aDictionary.contains(cSearch);// Seek for the value
                 if(lfound == false){
                     cUnknowWords = cUnknowWords + "Recod : " + nrecord + " it is an unknown word "+ cSearch +"\n";
                 }
                 nrecord++;
              }

               
        }
                        jTextAreaCompared.setText(cUnknowWords);// Update the Text Field with the result of the analysis
    }        
        
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPaneProcessed = new javax.swing.JScrollPane();
        jTextAreaCompared = new javax.swing.JTextArea();
        jTextFieldTypeW = new javax.swing.JTextField();
        jButtonClose = new javax.swing.JButton();
        jLabelTextProcessed = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButtonloadFile = new javax.swing.JButton();
        jButtonLoadTest = new javax.swing.JButton();
        jButtonCompareFiles = new javax.swing.JButton();
        jTextFieldFileDictionary = new javax.swing.JTextField();
        jTextFieldTestFile = new javax.swing.JTextField();
        jLabelStatusDictionary = new javax.swing.JLabel();
        jLabelStatusTest = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Search a word");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextAreaCompared.setColumns(20);
        jTextAreaCompared.setRows(5);
        jScrollPaneProcessed.setViewportView(jTextAreaCompared);

        jTextFieldTypeW.setText("Type here...");

        jButtonClose.setText("Close");
        jButtonClose.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCloseMouseClicked(evt);
            }
        });

        jLabelTextProcessed.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTextProcessed.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTextProcessed.setText("Text Processed");

        jLabel1.setText("Type a word to be searched");

        jButtonloadFile.setText("Load Dictinary File");
        jButtonloadFile.setEnabled(false);
        jButtonloadFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonloadFileMouseClicked(evt);
            }
        });

        jButtonLoadTest.setText("Load Test File");
        jButtonLoadTest.setEnabled(false);
        jButtonLoadTest.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonLoadTestMouseClicked(evt);
            }
        });
        jButtonLoadTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLoadTestActionPerformed(evt);
            }
        });

        jButtonCompareFiles.setBackground(new java.awt.Color(204, 204, 204));
        jButtonCompareFiles.setText("Copare Files");
        jButtonCompareFiles.setEnabled(false);
        jButtonCompareFiles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCompareFilesMouseClicked(evt);
            }
        });
        jButtonCompareFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCompareFilesActionPerformed(evt);
            }
        });

        jTextFieldFileDictionary.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jTextFieldFileDictionaryInputMethodTextChanged(evt);
            }
        });
        jTextFieldFileDictionary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldFileDictionaryKeyTyped(evt);
            }
        });

        jTextFieldTestFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTestFileActionPerformed(evt);
            }
        });
        jTextFieldTestFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldTestFileKeyTyped(evt);
            }
        });

        jLabelStatusDictionary.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStatusDictionary.setForeground(new java.awt.Color(255, 0, 51));
        jLabelStatusDictionary.setText("Inactive");

        jLabelStatusTest.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelStatusTest.setForeground(new java.awt.Color(255, 0, 0));
        jLabelStatusTest.setText("Inactive");

        jLabel2.setText("Type the Dictionary file  name");

        jLabel3.setText("Type the Test file name");

        jLabel4.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel4.setText("Files must be located at C:\\week3\\");

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabelTextProcessed, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(133, 133, 133))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(88, 88, 88)
                                    .addComponent(jLabelStatusTest))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(58, 58, 58)
                                    .addComponent(jLabelStatusDictionary))
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldTypeW, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButton1))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldFileDictionary, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jButtonloadFile, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jButtonLoadTest, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jSeparator1))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(31, 31, 31)
                                    .addComponent(jButtonCompareFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonClose)
                                    .addGap(96, 96, 96))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(jScrollPaneProcessed, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            );
            layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabelTextProcessed)
                        .addComponent(jLabel1))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldTypeW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton1))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(11, 11, 11)
                            .addComponent(jLabel4)
                            .addGap(25, 25, 25)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2)
                                .addComponent(jLabelStatusDictionary))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jTextFieldFileDictionary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonloadFile))
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3)
                                .addComponent(jLabelStatusTest))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextFieldTestFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButtonLoadTest)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(jScrollPaneProcessed, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonClose)
                        .addComponent(jButtonCompareFiles))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );

            jLabel2.getAccessibleContext().setAccessibleName("Type the Dictionary file's name");
            jLabel3.getAccessibleContext().setAccessibleName("Type the Test file's name");

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Search for a word into the Dictionary
        Compare_Files(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonCloseMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCloseMouseClicked
         // Close the window
         System.exit(0);
    }//GEN-LAST:event_jButtonCloseMouseClicked

    private void jButtonloadFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonloadFileMouseClicked
        try {
            boolean lLoded = false;
            // Load the Dictionary
            //ReadingFile(cPath+"dictionary.txt", aDictionary);
            aDictionary.clear();// remove all data to load new one
            lLoded = ReadingFile(cPath+jTextFieldFileDictionary.getText(), aDictionary);
            
            if (lLoded){ 
                jLabelStatusDictionary.setText("LOADED");
                jLabelStatusDictionary.setForeground(Color.blue);
                jButtonloadFile.setEnabled(true);
            }else{
                jLabelStatusDictionary.setText("Inactive");
                jLabelStatusDictionary.setForeground(Color.red);
                jButtonloadFile.setEnabled(false);
                jButtonCompareFiles.setEnabled(false);
            }
            // if both files are enable then Compare button will be enabled
            if (jButtonLoadTest.isEnabled() && jButtonloadFile.isEnabled()) {
                jButtonCompareFiles.setEnabled(true);
                jButtonCompareFiles.setBackground(Color.green);
            }else  jButtonCompareFiles.setBackground(Color.lightGray);
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Seijas_Main_Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonloadFileMouseClicked

    private void jButtonLoadTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLoadTestActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonLoadTestActionPerformed

    private void jButtonLoadTestMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonLoadTestMouseClicked
        try {
            boolean lLoded = false;
            // Load the Dictionary
            aTest.clear();// remove all data to load new one
            lLoded = ReadingFile(cPath+jTextFieldTestFile.getText(), aTest);
            if (lLoded){ 
                jLabelStatusTest.setText("LOADED");
                jLabelStatusTest.setForeground(Color.blue);
                jButtonLoadTest.setEnabled(true);
            }else{
                jLabelStatusTest.setText("Inactive");
                jLabelStatusTest.setForeground(Color.red);
                jButtonLoadTest.setEnabled(false);
                jButtonCompareFiles.setEnabled(false);
            }
            // if both files are enable then Compare button will be enabled
            if (jButtonLoadTest.isEnabled() && jButtonloadFile.isEnabled()) {
                jButtonCompareFiles.setEnabled(true);
                jButtonCompareFiles.setBackground(Color.green);
            }else  jButtonCompareFiles.setBackground(Color.lightGray);

        } catch (FileNotFoundException ex) {
            Logger.getLogger(Seijas_Main_Menu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButtonLoadTestMouseClicked

    private void jButtonCompareFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCompareFilesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonCompareFilesActionPerformed

    private void jButtonCompareFilesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCompareFilesMouseClicked
        // Compare the 2 files data, 0 = Compare the 2 Arrays
        Compare_Files(0);
    }//GEN-LAST:event_jButtonCompareFilesMouseClicked

    private void jTextFieldTestFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTestFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTestFileActionPerformed

    private void jTextFieldTestFileKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTestFileKeyTyped
        if (jTextFieldTestFile.getText() == null || jTextFieldTestFile.getText()=="" ){
             jButtonLoadTest.setEnabled(false);
         } else jButtonLoadTest.setEnabled(true);

    }//GEN-LAST:event_jTextFieldTestFileKeyTyped

    private void jTextFieldFileDictionaryInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jTextFieldFileDictionaryInputMethodTextChanged
        // TODO add your handling code here:
        if (jTextFieldFileDictionary.getText() == null || jTextFieldFileDictionary.getText()=="" )jButtonloadFile.setEnabled(false); else jButtonloadFile.setEnabled(true);
    }//GEN-LAST:event_jTextFieldFileDictionaryInputMethodTextChanged

    private void jTextFieldFileDictionaryKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFileDictionaryKeyTyped
        // TODO add your handling code here:
         if (jTextFieldFileDictionary.getText() == null || jTextFieldFileDictionary.getText()=="" ){
             jButtonloadFile.setEnabled(false);
         } else jButtonloadFile.setEnabled(true);
         
    }//GEN-LAST:event_jTextFieldFileDictionaryKeyTyped

   
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Seijas_Main_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Seijas_Main_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Seijas_Main_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Seijas_Main_Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Seijas_Main_Menu().setVisible(true);
            }
        });
    }
// public String[] aDictionary = new String[50];
//public String[] aTest = new String[50];
public String cPath = "C:/week3/";
public ArrayList<String> aDictionary=new ArrayList<String>(); 
public ArrayList<String> aTest=new ArrayList<String>(); 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonCompareFiles;
    private javax.swing.JButton jButtonLoadTest;
    private javax.swing.JButton jButtonloadFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelStatusDictionary;
    private javax.swing.JLabel jLabelStatusTest;
    private javax.swing.JLabel jLabelTextProcessed;
    private javax.swing.JScrollPane jScrollPaneProcessed;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaCompared;
    private javax.swing.JTextField jTextFieldFileDictionary;
    private javax.swing.JTextField jTextFieldTestFile;
    private javax.swing.JTextField jTextFieldTypeW;
    // End of variables declaration//GEN-END:variables

}    
    
    
       
 
        

